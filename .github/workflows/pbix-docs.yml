name: PBIX Docs
on:
  workflow_dispatch:
  push:
    paths:
      - '**.pbix'
      - 'tools/**'
      - '.github/workflows/pbix-docs.yml'

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # ⬇️ Stáhne poslední "pbi-tools Core" ZIP a přidá exe do PATH
      - name: Download pbi-tools Core (latest)
        shell: pwsh
        run: |
          $rel = Invoke-RestMethod -Uri https://api.github.com/repos/pbi-tools/pbi-tools/releases/latest
          $asset = $rel.assets | Where-Object { $_.name -match 'pbi-tools\.core.*(windows|win).*x64\.zip' }
          if (-not $asset) { throw "pbi-tools Core (Windows x64) ZIP not found on latest release." }
          Invoke-WebRequest -Uri $asset.browser_download_url -OutFile pbi-tools.zip
          Expand-Archive pbi-tools.zip -DestinationPath "$env:RUNNER_TEMP\pbi-tools" -Force
          $exe = Get-ChildItem "$env:RUNNER_TEMP\pbi-tools" -Recurse -Filter "pbi-tools*.exe" | Select-Object -First 1
          if (-not $exe) { throw "pbi-tools executable not found after extract." }
          Add-Content $env:GITHUB_PATH ($exe.DirectoryName)

      - name: Verify pbi-tools
        run: pbi-tools.exe --version

      - name: Extract all PBIX files
        shell: pwsh
        run: |
          mkdir .extract 2>$null
          Get-ChildItem -Recurse -Filter *.pbix | ForEach-Object {
            pbi-tools.exe extract $_.FullName -o ".\.extract\$($_.BaseName)" --include-m
          }

      - name: Generate Markdown for each model
        shell: pwsh
        run: |
          mkdir docs 2>$null
          Get-ChildItem .\.extract -Directory | ForEach-Object {
            ./tools/Generate-ModelDocs.ps1 -ExtractRoot $_.FullName -OutFile "docs/$($_.Name).md"
          }

      - name: Commit docs back
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs
          git commit -m "Update PBIX docs [skip ci]" || exit 0
          git push
